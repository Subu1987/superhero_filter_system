/**************************** Search by name/applyNameFilter() ********************************/

// we have two function, selectFilter() & applyFilter().
// whenever we select a option selectFilter() function called 

// but in name field whenever we start typing at that time, we have to called selectFilter(),so that value is goes in.

// onkeyup: whenever we press a key on keyboard & leave it onkeyup event called its a keyboard event.
// whenever each keyword is pressed selectFilter() function called its active the object property.

// here, in applyFilter() function we dont have to follow any order because we a filter object is active 
// we can apply as many filter we want.


// normally we working in 2 functions
// 1st, we select a option its set the function or we start typing its sets up the selectFilter() function.
// 2nd,when we called the applyFilter() function its execute.


// but in this particular field, when we start typing at the same time its set up the selectFilter() function.
// & at the same time we want it to called the applyFilter() function when we start typing
// thats why we creating a separate function that will setting up the filter 
// we name applyNameFilter(),basically its same function.
// whenever we start typing applyNameFilter() function called & at the end applyNameFilter() called internally, execute the tempsuperheroes code.

// includes sting function check particular alphabet in a particular string 
// return superhero.name.toUpperCase().includes(filters.name.value.toUpperCase()); 
// it actually check is there any alphabet that we are typing is avilable in superhero.name if its true then return will return.

// indexOf():
// it check that alphabet is index no & in that string its available or not.
// if the alphabet not available its gives -1 & if starting from start it will give 0.
// suppose it searching for "sup" in big string 1st its check its available or not, then its index no will index no of "s".(1st letter)
// return superhero.name.toUpperCase().indexOf(filters.name.value.toUpperCase()) - its will only give index number.
// but .filter() function need true or false 
// return need true 0r false so, we have to customize it
// so we are getting a search ahead type search, we start typing & search start.


/**************************** cancleFilter() ********************************/

// to make all the filters false & make their value false.
// basically we are manupilating all the objects.
// we made all filters false, then simply remove all the values,then we resetting the array so that
// every filter applied will remove & our tempsuperheroes again back new refresh original data of superheroes.
// because in past time there some filter applied manupilated the array.
// 1st thing we do that refresh it reset it then display it & change the count as well.

// enclosed every feild with form tag including buttons.(1st section & 2nd section)(search field,select feild)
// give your form a id, then we simply get the form by id 
// like this -document.getElementById('filter_form').reset();
// normall within the form tag our buttons work as submit so its refresh the page but we dont want that.
// we have to change its type=button which is useless by default & we have to customize it.
//   document.getElementById('filter_form').reset();
// here, reset() function simply reset form, & its use only in case of form.
// just the way we use reset in html form, we are simply manupilating reset with the help of JavaScript.

// so, cancleFilter() function reset the form as well as cancle all the filters.


/**************************** weight filter ********************************/

// if we pass the value in number input field we cant see placehilder that why we have to make label

// we actaully creating 2 fields one for min weight & other one max weight.
// we treating this two separate filters.
// 1st we have to make minweight & maxweight filter acitve.
// return superhero.appearance.weight[1] >= filters.minWeight.value;
// we dont have to check equal weight we have to match its minimum weight 
// we hvae to check, give all the things which weight is above that .

// initially it will not work because because its coming as a string format 
// return superhero.appearance.weight[1]===filters.maxWeight.value; (this will return a string but we need a number)
// so we need to convert it to number

// return Number(superhero.appearance.weight[1]) >= Number(filters.minWeight.value);
// with the help of Number 

// & also in our data weight is in string format we need split that .

// split() function:

// if we ever want to separate a string based on a separater we used split function
// split up the string & convert into array.
