// initially model parent display is none,
// we manipulating the css by javascript 
// veiwSuperhero=()=>{
  document.getElementById('model_parent').style.display="flex";
}
// & call this function in our superhero cards
// <div class="superhero" onclick="veiwSuperhero()">

// eventbubling:
// whatever event you give to parent it will work for all its childs. so if we click on any child we still get the parent event.

//closeModel():

// we call this function whenever we click on close button.
// 1st, we fetch element by id number then then using javascript .

// TO GET SINGLE element from array we used index of that particular element.
// there are two ways 
// the 1st way is index way, we have to pass index of element as a parameter.
// like this -  <div class="superhero" onclick="veiwSuperhero(${index})">
// this forEach loop creating that string for us, so onclick="veiwSuperhero(${index})we simply pass index.
// problems: when we working with realtime data working with index is not a good option.
// if we deleted one elements from array.then our main array data will change so as index no of elements.
// when we filter our main array,but the problem of using array is that it will showing index no of our main array. because we have two array now.
// to avoid index no problem we have to use somethng as unique.
// unique means that particular data belongs to single that element
// if we go any database, any array that particular thing remain same, -as a ID(primary key)
// instead of index we will pass ID
// now if we pass ID as a argument we still get only id of that element
// based on index its easy find superheroesbut how can we find elements based on ID.


// difference between filter() & find():
// if we have to find a single element by forEach, it will looping through all the elements return back an array.
// find() function return back only one single element, when it find out the element it stop looping.
