/**************************** JSON ********************************/

// json is derived from Js object
// json - JavaScript object notation.
// json is a string format of Js object. its looks exactly like a JS object.
// JSON always in a normal textual format.
// every language have their own JSON parser. which converted it to its related language object by JSON parser.
// previously we used XML format to maintain data, to share data.
// but now we used JSON format to maintain & share data caused its very easy to use & understanding.

// What is parsing the data?
// ans: Data parsing is a method where one string of data gets converted into a different type of data.

// when we get a JSON data everything as a string(in doublequote).
// then we have to convert it into JSON object means parse it.


// let data = [
    {name:"subrato",age:26},  // this is a Array of object
    {name:"subu",age:26}
];

// to parse this object to JSON format we use JSON.stringify(data). 
// this will convert this to normal text, a string 

// to parse to JSON file object again we use JSON.parse(JSON.stringify(data)).
// this will convert this to again a Array of object.


// in this project....
// 1. we will make a name filter
// 2. gender filter
// 3. range filter


/**************************** Filter State Management ********************************/

// to maintain state of the filter, in which we maintain what filter is getting applied & what filter is not getting applied.
// we create a filters object, where filter property also a object.
// in this object lets have a property of gender filter, so its a gender filter.
// 1st there is 2 things in this:

// let filters={
    gender:{active:false,value:""}
}

// for each & every filter we have a active status
// if its true that means i want it to applied & if its false that means i dont want this to applied.
// then we have a value also by default value is blank that means there is no value.

// in future if we have publisher filter
// active status will be true if that filter applied 
// it will be false if that is not applied.

// now we are going to create a applyFilters function that will basically manupilating this filters object, maintain this object.
// this function have a two parameters
// 1st its gonna have filtername, 2nd its simply gonna have value.
// basically we want to manupilating this object by calling applyFilters function.

// let filters={
    gender:{active:false,value:""}
    publisher:{active:false,value:""}
}

// applyFilter=(filtername="gender",value)=>{

}

// here, our property is directly not accessable ,its store in a filtername variable like this filtername="gender".
// normally we access it like this filters.gender(its needs to be gender only)
// but now our gender property is coming in a variable to access its we have to use Array notation.
// so, inside this filtername we will pass what filter we wanna use.
// so, basically this filtername carry some kind of property name either gender or publisher
// and we are gonna select this property like this filters[filtername] cause its coming inside a variable.
// whatever filter filters[filtername] comes from here we will simply make this active
// filters[filtername].active=true;
// only if the value passing through not blank

// selectFilter=(filtername,value)=>{

    if(value!==""){

    filters[filtername].active=true;
    filters[filtername].value=value;

  }

}

// selectFilter("gender","male");
// now we called this function & pass two things "gender" & "male"
// that means we are targetting gender filter & the value for that filter passing "male".
// now what happens :
// we calling this function thats means in filtername we are passing "gender" & the value we are passing is "male".


// now we check the value that coming from parameter is blank no its not blank(cause we are passing the "male" value)
// in that case filters[filtername] that is gender that means filter of gender that particular gender property.
// filters[filtername].active should become true so basically we simply changing gender:{active:false} false to true.
// & also filters[filtername].value that means gender:{value:""} this value pass the value that we are passing.
// so this value become male & active become true gender:{active:true,value:"male"}.
let filters={

  gender:{active:false,value:""},
  publisher:{active:false,value:""},

}

selectFilter=(filtername,value)=>{

  if(value!=="")
  {

    filters[filtername].active=true;
    filters[filtername].value=value;

  }
  else{
    
    filters[filtername].active=false;
    filters[filtername].value="";

  }
  console.log(filters);

}

selectFilter("gender","male");
selectFilter("publisher","");

// we are simply manupilating it making it true, false as per our need.it depends what we are passing.
// now we made a function that will simply manupilating any property we add in a filters object.
// if we want to manupilate gender property within the filters object we will call this function we will pass filtername as gender
// if we want to manupilate publisher property within the filters object we will call this function we will pass filtername as publisher.



// purpose of selectFilter() function:

// we want to call this function when we want to make any kind of changes in selection.
// basically when we select something in select option, that function should be called.
// when select male in option filter should be change or select others filter should be change.

// onchange event= basically when we change any value in this selectfield we want to called applyFilter function.

//this.value = document.getElementById('').value

// its another way of fetching value from seleted element only in this senario.
// here "this" means current element value a keyword.
// whenever we want to pass current feild value to pass inside the calling function we can always go for this.value
// we want to send this value whatever value we want to pass as a arguments.

// we dont have to use document.getElementById always 
// although if we use document.getElementById then we should give id to select element caused it has the value 
// whatever option we choose.

/**************************** Summary ********************************/

// whatever data we are passing as a argument into the selectFilter() function.
// its check whether its true or not 
// if true then filters object property will change & we print it to console.
// if not then its will be remain same.


//// publisher extracting code:

// data is here a new Array by looping through superheroes Array of object by .map function, passing superhero as a callback functon variable.
// where all the objects available.
// we are looping through it & return superhero.biography.publisher this value & store it in a data Array.



// here newdata is an Array we creating to extract unique elements from data Array.
// initially its blank let newdata =[];
// we are looping through data by .forEach function data.forEach((p,i)=> 
// where passing a callback function, where p is parameter where all the elements are available.

let newdata=[];

data.forEach((p,i)=>{

  if(newdata.length==0)
  {
      newdata.push(p);
  }
  else if(newdata.length!=0 && newdata.includes(p)==false)
  {
    newdata.push(p);
  }

});

console.log(newdata);


// when (newdata.length==0) means its index no 0, push elements to newdata Array.
// when (newdata.length!=0 && newdata.includes(p)==false) means its index no not 0,
// newdata.includes(p)==false, here .includes(p) function check any element there make false.
// && and operator check if both condition true then make that statement true.
// newdata have publisher name only one time.


// we have all the publisher name perfectly unique in newdata Array
// then again we through it & generate <option class="${p}">${p}</option>


// the applyFilter() function same for everything.
// we simply have to pass proper filtername & the value

// so in 1st case filtername is 'gender' so it will work for gender property in filter object.
// in 2nd case filtername is 'publisher' so it will work for publisher property.



/**************************** filters object ********************************/

// filter object is that everything what we need.
// whenever we select a feild or option, do anything in the feild.
// its directly comes to the filters object.
// now based on a filter object whatever filter is active that will applied
// whatever filter is not active is not applied.


/**************************** tempsuperoes ********************************/

// we dont want our main superheroes Array to be hamper.
// so we are not gonna manupilate our actual Array cause we also want our data to be backed.
// So we are never gonna manupilate our actual Array.
// so, we will create a copy of it 
// we maintain a copy so that if we remove anything, do anything
// we are gonna do in this tempsuperoes.

// let tempsuperheroes=superheroes; 
// like this, and it will not reference to it because its an Array not an object.

// basically, we pass tempsuperheroes as argument in a superarray parameter.
// now our display() function directly not working with our main array.
// basically we told that whatever array we give you display that.
// so, whenever we call display() function we have to call pass a argument or array of superheroes.
// so that it can display it.
// now our display(tempsuperheroes) become dynamic.
// whenever we call this function we have to pass a Array.


/**************************** Summarize ********************************/

// initially we copied all our superheroes in tempsuperheroes.
// then we called display() function & told it to display tempsuperheroes that means all the superheroes.
// in tempsuperheroes we have all 564 superheroes.
// now when applied filters will called it will check 1st gender filter active 
// filters.gender.active=== true then only filters on superheroes
// applyFilters() function check for the condition & return us back all the data match that particular condition inside a new Array.
// in this we are putting this data inside a new Array & we simply put it into tempsuperheroes.
// again we removing all the other things from tempsuperheroes. & putting all the new filters.
// basically whatever superhero.appearance.gender value matches our filters.gender.value, value 
// whatever value we store   gender:{active:false,value:""} here, matches that put it in tempsuperheroes.
// its simply check what value we passing its having in superhero object available or matching or not, if its match store it in tempsuperheroes.
// convert both of them return superhero.appearance.gender.toUpperCase()===filters.gender.value.toUpperCase(); so that no spelling issue.
// & display it display(tempsuperheroes).

// 1st, we have all the 564 superheroes in tempsuperheroes variable.
// then, if gender is active, we go through all superheroes via tempsuperheroes extract all the female superheroes & again put it back to tempsuperheroes.
// that means we simply manupilate the tempsuperheroes.
// resetting tempsuperheroes everytime so that we can get our old data back again & again.
// initially in tempsuperheroes we have all 564 data like this tempsuperheroes=[564]
// then when we select gender, gender filter is called so it filter it out.
// now, lets say select female filter, so we get 30 females superheroes extracted in tempsuperheroes=[30].
// & again we store it back tempsuperheroes.
// since we only seleted female, the publisher filter will not called cause publisher is still inactive.

// now let say we goingback & select a publisher then applyFilters() again be called.
// again the tempsuperheroes reset, & its turns back to tempsuperheroes=[564]

// now it will again check gender is active, because we did't change it, filter based on gender again it become tempsuperheroes=[30].
// but now publisher also active,based on publisher we get 12 comics, it will become tempsuperheroes=[12]


// when page load we found 563 superheroes
// document.getElementById('count').innerText = tempsuperheroes.length; by this.




