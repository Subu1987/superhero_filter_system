// pagination

// 1st, we will let a variable start=0, we can put this anywhere instead of 0.
// start will maintain where we gonna cut everytime.
// whatever object coming in superArray as parameter we want to spread it & store it to new array called copySuperArray.
// because we wanna use splice array function to cut the object elements from array just to dont hamper our main array
// instead of slice, where elements cut counts from start,
// in array function if we change in an array other one also get change if they are in equale
// thats create a new array copySuperArray, spread the superArray & store elements in copySuperArray as array 

// let displaySuperheroes= copySuperArray.splice(start,12);

// here we only cut 12 elements from array starting from 0 to 12 by splice array function in copySuperArray.
// then we only display 1st 12, because we want to looping through only 12 elements.
// displaySuperheroes.map((superhero,index)=>{

}

//next():

// now we gonna create a function next()
// next() do is, its increament the start value.initially start value is 0.
// so it splice function cutting elements from start to 12.means from the 0 index to 11 index- 12 elements
// but we want to increament the start variable value by name()
// 1st time we cut 12 elements, next time start value increament by 12 start+=12,
// so after calling next function in next button it will be cut more 12 elements from 12th index.
// next time again we calling next() its value increamented to 24, now it will cut 12 elements from 24th index.
// now we will, calling the display(tempsuperheroes) passing tempsuperheroes from it.
// when we call the next() start value increament by 12 & it will call the display function from passing tempsuperheroes from it as arguments.

// NOW, to change the start value 0 again in selectFilter(), so whenever we selectFilter start value from 0.

// how to calculate the no of pages to show the superheroes.
// if we have 152 superhero & we want to display 12 at once 
// we simply need 152/12 = 12.6666666667
// 12 pages each page has 12 superheroes
// 1 page to display the remaining superheroes
// total 13 pages , in this case, to round the floating no we use Math.ceil() - so value should be up.

// pageCount maintain the page count , like on which page we are currently.
// noOfPages giving us last page, the no of page we have.so it maintain on which page we want to travel.
// let noOfPages = Math.ceil(superheroes.length/12);
// noOfPages is variable we store here, total we have 563 superheroes, we want to display 12 superheroes at once 
// 563/12 so we need total 47 page to display all superheroes.

// lets make variable pageCount initially its value 1;
// & everytime we click on next button pageCount value increament by 1by post increament operator pageCount++;

// now make condition- if(pageCount<noOfPages) means initially pageCount=1 & noOfPages total we have 47
// so if(1<47) or we can say if(pageCount<noOfPages){
    pageCount++ ;
    start+=12 ;
    display(tempsuperheroes);
}
// untill the if condition matches, each time we calling the next() it will increases pageCount by 1 & append start value by 12 
// then we display our tempsuperheroes within it.


// but when we apply a filter in applyFilters() we want to, start the pageCount=1 & noOfPages = Math.ceil(tempsuperheroes.length/12).
// because we already choosing objects after filtering, now we want to use next() of that much array of object we have in tempsuperheroes.
// so we make pageCount=1, noOfPages = Math.ceil(tempsuperheroes.length/12) to its initially position apply next() function.

// in case of selectFilter & applyNameFilters we make sure that start value starting from 0, so that we get tha actual elements after cutting.

// in case of sorting function dont need to take care of pagination, because both of them not having relation.
//  because if we have 10 superheroes & we sorting them we still have 10 superheroes.


//prev():

// in prev() we simply doing the reverse, 1st we check is pageCount>1 or not, caused if we move back our last page will 1 no page.
// then pageCount --; it simply removing -1 from pageCount.
// & start -=12 , we deducting 12 elements from start whenever we click prev() function.


// when we applyFilters() then try to sorted , its not sorting because we are not sorting actual tempsuperheroes.
// we are sorting sortSuperheros. caused its a extra feature, after sorting we will get the original data back but we dont need this now.
// so we used, direct tempsuperheroes.
// and one sorted, we dont need actual state back.


// GoToPage():

// 1st we fetch the elements by id & store it in pageNumber
// like this - let PageNumber= document.getElementById('goto').value;
// now we check the condition 
// 1st, its not blank if(pageNumber!=="")
// then, it will check pageNumber>=1, whatever page we have its not less than one, it should greater than or equale to one.
// then, again it check pageNumber<=noOfPages, 


// if pageCount= 1 , start= 0;
//    pageCount= 2 , start= 12;
//    pageCount= 3 , start= 24;
// everytime start increament by 12, if pageno increases.
// simply, start= (PageNumber-1)*12 cause when pageNumber 1, start= (1-1)*12 , start value become 0, so it will cut only 12 elements.
// to check pageCount= pageNumber, in which page we are standing.

// basically what we doing is, for next button, we change the pageCount, we change the start & display(tempsuperheroes) it.
// for prev button  

// and again for GoToPage we change the pageCount, we change the start & display(tempsuperheroes) it but directly to any page not decreamenting or increamenting value.

// by fetching we get the data as string we have to convert it in number like this - 
